{"openapi": "3.0.3", "info": {"title": "Geolocation Agent", "description": "Geolocation services using Amazon Location Services (ESRI)", "version": "1.0.0"}, "servers": [{"url": "/"}], "paths": {"/geocode": {"get": {"summary": "Returns the coordinates for a given US postal address: <street number> <street name> <city>, <state> <zip code>", "description": "Returns longitude and latitude as decimal values for a given location. ALWAYS use this service for any reverse geocoding", "operationId": "get_point_coordinates", "parameters": [{"description": "The street number of the address. Example: '123'", "required": true, "schema": {"type": "string", "title": "Street Number", "description": "The street number of the address. Example: '123'"}, "name": "street_number", "in": "query"}, {"description": "The street name of the address. Example: 'Main St'", "required": true, "schema": {"type": "string", "title": "Street Name", "description": "The street name of the address. Example: 'Main St'"}, "name": "street_name", "in": "query"}, {"description": "The city of the address. Example: 'Anytown'", "required": true, "schema": {"type": "string", "title": "City", "description": "The city of the address. Example: 'Anytown'"}, "name": "city", "in": "query"}, {"description": "The state of the address. Example: 'CA'", "required": true, "schema": {"type": "string", "title": "State", "description": "The state of the address. Example: 'CA'"}, "name": "state", "in": "query"}, {"description": "The zip code of the address. Example: '90210'", "required": true, "schema": {"type": "string", "title": "Zip Code", "description": "The zip code of the address. Example: '90210'"}, "name": "zip_code", "in": "query"}], "responses": {"422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Return"}}}}}}}, "/search": {"get": {"summary": "Searches for the given text and attempts to return a US postal address: <street number> <street name> <city>, <state> <zip code>", "description": "Searches for the given text and attempts to return a US postal address: <street number> <street name> <city>, <state> <zip code>", "operationId": "search_place_index_for_text", "parameters": [{"description": "Text to search for in the place index. Example: 'Statue of Liberty'", "required": true, "schema": {"type": "string", "title": "Location Description", "description": "Text to search for in the place index. Example: 'Statue of Liberty'"}, "name": "location_description", "in": "query"}], "responses": {"422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Return"}}}}}}}, "/rev-geocode": {"get": {"summary": "Reverse Geocode", "description": "Returns the address for given coordinates.", "operationId": "reverse_geocode", "parameters": [{"description": "Longitude coordinate. Example: '-74.0060'", "required": true, "schema": {"type": "string", "title": "Longitude", "description": "Longitude coordinate. Example: '-74.0060'"}, "name": "longitude", "in": "query"}, {"description": "Latitude coordinate. Example: '40.7128'", "required": true, "schema": {"type": "string", "title": "Latitude", "description": "Latitude coordinate. Example: '40.7128'"}, "name": "latitude", "in": "query"}], "responses": {"422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Return"}}}}}}}, "/route": {"get": {"summary": "Calculate Route", "description": "Calculates the walking or driving routes between two sets of coordinates, including distances and times.", "operationId": "calculate_route", "parameters": [{"description": "Departure longitude coordinate. Example: '-118.2437'", "required": true, "schema": {"type": "string", "title": "Departure Longitude", "description": "Departure longitude coordinate. Example: '-118.2437'"}, "name": "departure_longitude", "in": "query"}, {"description": "Departure latitude coordinate. Example: '34.0522'", "required": true, "schema": {"type": "string", "title": "Departure Latitude", "description": "Departure latitude coordinate. Example: '34.0522'"}, "name": "departure_latitude", "in": "query"}, {"description": "Destination longitude coordinate. Example: '-122.4194'", "required": true, "schema": {"type": "string", "title": "Destination Longitude", "description": "Destination longitude coordinate. Example: '-122.4194'"}, "name": "destination_longitude", "in": "query"}, {"description": "Destination latitude coordinate. Example: '37.7749'", "required": true, "schema": {"type": "string", "title": "Destination Latitude", "description": "Destination latitude coordinate. Example: '37.7749'"}, "name": "destination_latitude", "in": "query"}, {"description": "Travel mode (e.g., Car, Walking). Example: 'Car'", "required": false, "schema": {"type": "string", "title": "Travel Mode", "description": "Travel mode (e.g., Car, Walking). Example: 'Car'", "default": "Car"}, "name": "travel_mode", "in": "query"}, {"description": "Distance unit (e.g., Miles, Kilometers). Example: 'Miles'", "required": false, "schema": {"type": "string", "title": "Distance Unit", "description": "Distance unit (e.g., Miles, Kilometers). Example: 'Miles'", "default": "Miles"}, "name": "distance_unit", "in": "query"}], "responses": {"422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Return"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}, "tags": [{"name": "coordinates"}, {"name": "reverse geocode"}, {"name": "calculate route"}]}
